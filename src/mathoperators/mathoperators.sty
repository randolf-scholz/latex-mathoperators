% chktex-file 41
\ProvidesPackage{mathoperators}[2024-11-15]% chktex 8
% region requirements ------------------------------------------------------------------
\NeedsTeXFormat{LaTeX2e}[2024-06-01]% chktex 8
\RequirePackage{mathtools}

% Check for the physics package
\@ifpackageloaded{physics}{% incompatible with physics package
\PackageError{mathoperators}{%
	The physics package is incompatible with the mathoperators package.
	Consider using physics2 instead.
}{}
}

% Check again for the physics package at the end of the preamble
\AtBeginDocument{%
\@ifpackageloaded{physics}{% incompatible with physics package
	\PackageError{mathoperators}{%
		The physics package is incompatible with the mathoperators package.
		Consider using physics2 instead.
	}{}
}
}
% endregion requirements ---------------------------------------------------------------

% region options -----------------------------------------------------------------------
% defaults:
% \def\mathop@expectation{\mathbf{E}}
% \def\mathop@variance{\mathbf{Var}}

\DeclareKeys[mathoperators]{
	expectation.store	= \@mathoperators@expectation,
	expectation.usage	= load,
	variance.store		= \@mathoperators@variance,
	variance.usage		= load,
}
\SetKeys[mathoperators]{
	expectation={\mathbf{E}},
	variance={Var},
}
\ProcessKeyOptions[mathoperators]
% endregion options --------------------------------------------------------------------

% region macros ------------------------------------------------------------------------
% region physics package ---------------------------------------------------------------
% SEE: https://tex.stackexchange.com/a/60546
\NewDocumentCommand\dd{}{\mathop{}\!\mathrm{d}}% differential
% Usage: \int f(x) \dd{x} provides better spacing and makes the d non-italic.

\NewDocumentCommand\dv{e{^} o m}{% Derivative
	% Usage: \dv{x} ‚áù d/dx,  \dv[f]{x} ‚áù df/dx,  \dv^n[f]{x} ‚áù d‚Åøf/dx‚Åø
	% Use with \dv*{} for inline fractions
	\def\dv@exp{\IfValueTF{#1}{^{#1}\!}{}}%
	\def\dv@num{\IfValueTF{#2}{#2}{}}%
	\frac{\dd\dv@exp\dv@num}{\dd#3\dv@exp}%
}

\NewDocumentCommand\pdv{e{^} o m}{% Partial derivative
	% Usage: \pdv{x}‚áù ‚àÇ/‚àÇx,  \pdv[f]{x} ‚áù ‚àÇf/‚àÇx,  \pdv^n[f]{x} ‚áù ‚àÇ‚Åø f/‚àÇx‚Åø
	% Use with \pdv*{} for inline fractions
	\def\pdv@exp{\IfValueTF{#1}{^{#1}\!}{}}%
	\def\pdv@num{\IfValueTF{#2}{#2}{}}%
	\frac{\partial\pdv@exp\pdv@num}{\partial#3\pdv@exp}%
}
\NewDocumentCommand\qq{s m}{\IfBooleanTF{#1}{}{\quad}\text{#2}\quad}
% endregion physics package ------------------------------------------------------------

% region beamer-aware operators --------------------------------------------------------
\@ifclassloaded{beamer}{%
% FIXME: https://tex.stackexchange.com/q/565971
\NewCommandCopy{\old@underbrace}{\underbrace}
\NewCommandCopy{\old@overbrace}{\overbrace}
\NewCommandCopy{\old@underbracket}{\underbracket}
\NewCommandCopy{\old@overbracket}{\overbracket}
\NewCommandCopy{\old@underset}{\underset}
\NewCommandCopy{\old@overset}{\overset}

\DeclareDocumentCommand{\underbrace}{d<> m e{_}}{%
	\IfValueTF{#1}% IF <overlay-specification> given
	{\old@underbrace{#2\onslide<#1>}_{#3}\onslide}%
	{\old@underbrace{#2}_{#3}}%
}%

\DeclareDocumentCommand{\overbrace}{d<> m e{^}}{%
	\IfValueTF{#1}% IF <overlay-specification> given
	{\onslide<#1>\old@overbrace{\onslide<1->#2}^{#3}\onslide}%
	{\old@overbrace{#2}^{#3}}%
}%

\DeclareDocumentCommand{\underbracket}{d<> m e{_}}{%
	\IfValueTF{#1}% IF <overlay-specification> given
	{\old@underbracket{#2\onslide<#1>}_{#3}\onslide}%
	{\old@underbracket{#2}_{#3}}%
}%

\DeclareDocumentCommand{\overbracket}{d<> m e{^}}{%
	\IfValueTF{#1}% IF <overlay-specification> given
	{\onslide<#1>\old@overbracket{\onslide<1->#2}^{#3}\onslide}%
	{\old@overbracket{#2}^{#3}}%
}%

\DeclareDocumentCommand{\underset}{d<> m m}{%
	\IfValueTF{#1}% IF <overlay-specification> given
	{\onslide<#1>\old@underset{\onslide<1->#2}{#3}\onslide}%
	{\old@underset{#2}{#3}}%
}%

\DeclareDocumentCommand{\overset}{d<> m m}{%
	\IfValueTF{#1}% IF <overlay-specification> given
	{\old@overset{#2\onslide<#1>}{#3}\onslide}%
	{\old@overset{#2}{#3}}%
}%
}{} % end if beamer
% endregion beamer-aware operators -----------------------------------------------------

% TODO: Use mathtools.DeclarePairedDelimiter?
\NewDocumentCommand\eval{m}{\left.#1\right\rvert}  % x| evaluate at
\NewDocumentCommand\abs{m}{\left\lvert#1\right\rvert}  % |x| - absolute value
\NewDocumentCommand\ceil{m}{\left\lceil#1\right\rceil}  % ‚åàx‚åâ - ceiling
\NewDocumentCommand\floor{m}{\left\lfloor#1\right\rfloor}  % ‚åäx‚åã - floor
\NewDocumentCommand\norm{m}{\left\lVert#1\right\rVert}  % ‚Äñx‚Äñ - norm
\NewDocumentCommand\set{m}{\left\{#1\right\}}  % {x} set
\NewDocumentCommand\tuple{m}{\left(#1\right)}  % (x) tuple
\NewDocumentCommand\seq{m}{\left(#1\right)}  % (x) sequence
\NewDocumentCommand\gen{m}{\left\langle#1\right\rangle}  % ‚ü®x‚ü© - generated group

% bra-ket notation
\NewDocumentCommand\ket{m}{\left\lvert#1\right\rangle}  % |x‚ü© - ket vector
\NewDocumentCommand\bra{m}{\left\langle#1\right\rvert}  % ‚ü®x| - bra vector
\NewDocumentCommand\braket{m m}{\left\langle#1\middle\vert#2\right\rangle}  % ‚ü®x|y‚ü© - braket
\NewDocumentCommand\ketbra{m m}{\left\lvert#1\middle\rangle\middle\langle#2\right\rvert}  % |x‚ü©‚ü®y| - ketbra
\NewCommandCopy{\iprod}{\braket}% inner product
\NewCommandCopy{\oprod}{\ketbra}% outer product (\outer not available üòû)
\NewCommandCopy{\dyad}{\ketbra}% outer product (\outer not available üòû)

% fractions
\NewDocumentCommand{\pfrac} {m m}{\left(\frac {#1}{#2}\right)}
\NewDocumentCommand{\ptfrac}{m m}{\left(\tfrac{#1}{#2}\right)}

% asymptotics
\NewDocumentCommand{\bigO}{m}{\mathcal{O}\left(#1\right)}% big-O notation
\NewDocumentCommand{\bigOmega}{m}{\Omega\left(#1\right)}% big-Omega notation
\NewDocumentCommand{\littleO}{m}{o\left(#1\right)}% little-o notation
\NewDocumentCommand{\littleOmega}{m}{\omega\left(#1\right)}% little-omega notation
\NewDocumentCommand{\bigTheta}{m}{\Theta\left(#1\right)}% big-Theta notation

% region matrices ----------------------------------------------------------------------
% Note: *-variant provides extra argument for alignment
% angle brakets ‚ü®A‚ü©
\NewDocumentEnvironment{amatrix}{m}
	{\left\langle\begin{matrix}#1}
	{\end{matrix}\right\rangle}

\NewDocumentEnvironment{amatrix*}{O{c} m}
	{\left\langle\begin{matrix*}[#1]#2}
	{\end{matrix*}\right\rangle}

\NewDocumentCommand\mat{O{c} m}{\begin{matrix*}[#1]#2\end{matrix*}}% blank matrix
\NewDocumentCommand\pmat{O{c} m}{\begin{pmatrix*}[#1]#2\end{pmatrix*}}% (A) (parentheses)
\NewDocumentCommand\bmat{O{c} m}{\begin{bmatrix*}[#1]#2\end{bmatrix*}}% [A] (bracket)
\NewDocumentCommand\vmat{O{c} m}{\begin{vmatrix*}[#1]#2\end{vmatrix*}}% |A| (vertical)
\NewDocumentCommand\cmat{O{c} m}{\begin{Bmatrix*}[#1]#2\end{Bmatrix*}}% {A} (curly)
\NewDocumentCommand\nmat{O{c} m}{\begin{Vmatrix*}[#1]#2\end{Vmatrix*}}% ‚ÄñA‚Äñ (norm)
\NewDocumentCommand\amat{O{c} m}{\begin{amatrix*}[#1]#2\end{amatrix*}}% ‚ü®A‚ü© (angle)
% endregion matrices -------------------------------------------------------------------

% region smallmatrix -------------------------------------------------------------------
\NewDocumentEnvironment{asmallmatrix}{m}
	{\left\langle\begin{smallmatrix}#1}
	{\end{smallmatrix}\right\rangle}

\NewDocumentEnvironment{asmallmatrix*}{O{c} m}
	{\left\langle\begin{smallmatrix*}[#1]#2}
	{\end{smallmatrix*}\right\rangle}

\NewDocumentCommand\smat{O{c} m}{\begin{smallmatrix*}[#1]#2\end{smallmatrix*}}
\NewDocumentCommand\spmat{O{c} m}{\begin{psmallmatrix*}[#1]#2\end{psmallmatrix*}}
\NewDocumentCommand\sbmat{O{c} m}{\begin{bsmallmatrix*}[#1]#2\end{bsmallmatrix*}}
\NewDocumentCommand\svmat{O{c} m}{\begin{vsmallmatrix*}[#1]#2\end{vsmallmatrix*}}
\NewDocumentCommand\scmat{O{c} m}{\begin{Bsmallmatrix*}[#1]#2\end{Bsmallmatrix*}}
\NewDocumentCommand\snmat{O{c} m}{\begin{Vsmallmatrix*}[#1]#2\end{Vsmallmatrix*}}
\NewDocumentCommand\samat{O{c} m}{\begin{asmallmatrix*}[#1]#2\end{asmallmatrix*}}
% endregion smallmatrix ----------------------------------------------------------------

% region arrays ------------------------------------------------------------------------
%  NOTE: use \lvert and \rvert instead of | for better spacing
\NewDocumentCommand\arr{m m}{\begin{array}{#1}#2\end{array}}
\NewDocumentCommand\parr{m m}{\left(\begin{array}{#1}#2\end{array}\right)}
\NewDocumentCommand\barr{m m}{\left[\begin{array}{#1}#2\end{array}\right]}
\NewDocumentCommand\varr{m m}{\left\lvert\begin{array}{#1}#2\end{array}\right\rvert}
\NewDocumentCommand\carr{m m}{\left\{\begin{array}{#1}#2\end{array}\right\}}
\NewDocumentCommand\narr{m m}{\left\lVert\begin{array}{#1}#2\end{array}\right\rVert}
\NewDocumentCommand\aarr{m m}{\left\langle\begin{array}{#1}#2\end{array}\right\rangle}
% endregion arrays ---------------------------------------------------------------------

% region embellishments ----------------------------------------------------------------
% NOTE: overrides amsmath aliases \Hat -> \hat, etc.
\RenewCommandCopy{\Hat}{\widehat}%
\RenewCommandCopy{\Bar}{\overline}%
\RenewCommandCopy{\Tilde}{\widetilde}%
\RenewCommandCopy{\Vec}{\overrightarrow}%

\NewDocumentCommand{\underuparrow}{m m}{\underset{\overset{\uparrow}{\mathclap{#2}}}{#1}}  % a with ‚Üëb below
\NewDocumentCommand{\underdownarrow}{m m}{\underset{\overset{\downarrow}{\mathclap{#2}}}{#1}}  % a with ‚Üìb below
\NewDocumentCommand{\overuparrow}{m m}{\overset{\overset{\mathclap{#2}}{\uparrow}}{#1}}  % a with ‚Üëb above
\NewDocumentCommand{\overdownarrow}{m m}{\overset{\overset{\mathclap{#2}}{\downarrow}}{#1}}  % a with ‚Üìb above
% endregion embellishments -------------------------------------------------------------
% endregion macros ---------------------------------------------------------------------


% NOTE: `\mathcode` class codes
% Example: \meaning\perp -> \mathchar"323F
%  - First octdigit (0-7): 3 -> \mathrel
%  - Second hexdigit (0-F): 2 -> second math alphabet (16 max)
%  - Last two hexdigits (00-FF): 3F -> slot in the 256 character table.
% Classes:
% 	0: \mathord Ordinary (eg., /)
% 	1: \mathop Large operator (eg., \sum)
% 	2: \mathbin Binary operation (eg., +)
% 	3: \mathrel Relation (eg., =)
% 	4: \mathopen Opening (eg., ()
% 	5: \mathclose Closing (eg., ))
% 	6: \mathpunct Punctuation (eg., ,)
% 	7: \mathinner Variable family (eg., x)


% region characters --------------------------------------------------------------------
% NOTE: all commands defined here should use \mathord
\NewDocumentCommand{\const}{}{\mathord{\text{const.}}}% constant
\NewDocumentCommand{\iid}{}{\mathord{text{iid}}} % independent and identically distributed
% constants
\NewDocumentCommand{\NA}{}{\ifmmode\mathord{\texttt{N\!/\!A}}\else\texttt{N\!/\!A}\fi}
\NewDocumentCommand{\NaN}{}{\ifmmode\mathord{\texttt{NaN}}\else\texttt{NaN}\fi}
\NewCommandCopy{\NAN}{\NaN}
\NewCommandCopy{\nan}{\NaN}
\NewDocumentCommand{\eye}  {}{\mathord{\mathbb{I}}}% identity tensor
\NewDocumentCommand{\ones} {}{\mathord{\mathbb{1}}}% all-ones tensor
\NewDocumentCommand{\zeros}{}{\mathord{\mathbb{0}}}% all-zeros tensor
% region calculus-----------------------------------------------------------------------
\NewDocumentCommand{\grad}{}{\mathord{\nabla}}% gradient
\NewDocumentCommand{\D}   {}{\mathord{\mathbf{D}}}% total derivative
\NewDocumentCommand{\Jac} {}{\mathord{\mathbf{J}}}% Jacobian
\NewDocumentCommand{\Hess}{}{\mathord{\mathbf{H}}}% Hessian
\NewDocumentCommand{\F}   {}{\mathord{\mathcal{F}}}% Fourier transform
% endregion calculus -------------------------------------------------------------------
% endregion characters -----------------------------------------------------------------


% region binary operators --------------------------------------------------------------
% NOTE: all commands defined here should use \mathbin
% NOTE: mathbin is slightly less space than mathrel: https://tex.stackexchange.com/a/38984
% endregion binary operators -----------------------------------------------------------


% region relations ---------------------------------------------------------------------
% NOTE: all commands defined here should use \mathrel
% NOTE: consider using ‚Åá instead of \? for where-operator? (\Question in stix package)
\NewDocumentCommand{\?}{}{\mathrel{\textbf{\textsf{?}}}}% where operator
\NewDocumentCommand{\defiff}{}{\mathrel{\overset{\text{def}}{\iff}}}% definition iff
\NewDocumentCommand{\indep}{}{\mathrel{\perp\!\!\!\perp}}% chktex 21
\NewCommandCopy{\given}{\mid}% probability conditional
% endregion relations ------------------------------------------------------------------


% region brackets ----------------------------------------------------------------------
% NOTE: all commands defined here should use \mathopen, \mathclose
% bracketing
% NOTE: For clarity, we use the long form of delimiters
% SEE: TexBook chapter 17.
%  - \lparen, \rparen: ( )
%  - \lbrack, \rbrack: [ ]
%  - \lbrace, \rbrace: { }
%  - \langle, \rangle: ‚ü® ‚ü©
%  - \lvert, \rvert: | |
%  - \lVert, \rVert: ‚Äñ ‚Äñ
%  - \lceil, \rceil: ‚åà ‚åâ
%  - \lfloor, \rfloor: ‚åä ‚åã
\ProvideDocumentCommand{\lParen}{}{\mathopen{\lparen\mkern-4.5mu\lparen}}
\ProvideDocumentCommand{\rParen}{}{\mathclose{\rparen\mkern-4.5mu\rparen}}
\ProvideDocumentCommand{\lBrace}{}{\mathopen{\lbrace\mkern-6mu\lbrace}}
\ProvideDocumentCommand{\rBrace}{}{\mathclose{\rbrace\mkern-6mu\rbrace}}
\ProvideDocumentCommand{\lAngle}{}{\mathopen{\langle\mkern-4.5mu\langle}}
\ProvideDocumentCommand{\rAngle}{}{\mathclose{\rangle\mkern-4.5mu\rangle}}
\ProvideDocumentCommand{\lBrack}{}{\mathopen{\lbrack\mkern-3mu\lbrack}}
\ProvideDocumentCommand{\rBrack}{}{\mathclose{\rbrack\mkern-3mu\rbrack}}
% endregion brackets -------------------------------------------------------------------


% region mathoperators -----------------------------------------------------------------
% NOTE: all commands defined here should use \DeclareMathOperator (-> \mathop)
% NOTE: an operator is something that expects an argument.
% NOTE: Operators can be used without brackets, in which case they insert extra space.
% region sets --------------------------------------------------------------------------
\DeclareMathOperator{\vol}    {vol}     % volume
\DeclareMathOperator{\Seq}    {Seq}     % sequence space
\DeclareMathOperator{\OrdSeq} {OrdSeq}  % space of ordered sequences
% endregion sets -----------------------------------------------------------------------


% region functions ---------------------------------------------------------------------
\DeclareMathOperator{\Fun}    {Fun}   % space of  functions
\DeclareMathOperator{\Lip}    {Lip}   % Lipschitz functions

\DeclareMathOperator{\dom}    {dom}   % domain
\DeclareMathOperator{\codom}  {codom} % codomain
\DeclareMathOperator{\im}     {im}    % image
\DeclareMathOperator{\range}  {range} % range (synonym for image)
\DeclareMathOperator{\supp}   {supp}  % support ( \dom(f)\f‚Åª¬π({0}) )

\DeclareMathOperator{\dist}   {dist}  % distance metric
\DeclareMathOperator{\Sim}    {sim}   % similarity
% endregion functions ------------------------------------------------------------------


% region Linear Algebra ----------------------------------------------------------------
% spaces
\DeclareMathOperator{\GL}    {GL}    % general linear group
\DeclareMathOperator{\Lin}   {Lin}   % space of linear functions
\DeclareMathOperator{\Mat}   {Mat}   % space of matrices
\DeclareMathOperator{\Ker}   {Ker}   % kernel of matrix
\DeclareMathOperator{\Null}  {Null}  % null space (synonym for kernel)
% induced sets
\DeclareMathOperator{\Span}  {span}  % linear span
\DeclareMathOperator{\aff}   {aff}   % affine  hull
\DeclareMathOperator{\conv}  {conv}  % convex  hull
\DeclareMathOperator{\cone}  {cone}  % conical hull
\DeclareMathOperator{\proj}  {proj}  % projection operator
% functions of matrices
\DeclareMathOperator{\diag}  {diag}  % diagonal of matrix or vector
\DeclareMathOperator{\spec}  {spec}  % spectrum
\DeclareMathOperator{\tr}    {tr}    % trace
\DeclareMathOperator{\trace} {trace} % trace
\DeclareMathOperator{\rank}  {rank}  % rank
% endregion Linear Algebra -------------------------------------------------------------


% region abstract algebra --------------------------------------------------------------
\DeclareMathOperator{\Hom}   {Hom}   % Homomorphism
\DeclareMathOperator{\Sym}   {Sym}   % Symmetry group
\DeclareMathOperator{\Gal}   {Gal}   % Galois group
\DeclareMathOperator{\Aut}   {Aut}   % Automorphism group
\DeclareMathOperator{\Alt}   {Alt}   % Alternating group
\DeclareMathOperator{\charK} {char}  % Field characteristic
% endregion abstract algebra -----------------------------------------------------------


% region optimization ------------------------------------------------------------------
\DeclareMathOperator*{\minimize} {minimize}
\DeclareMathOperator*{\maximize} {maximize}
\DeclareMathOperator*{\argmin}   {arg\,min}% argumentum minimi
\DeclareMathOperator*{\argmax}   {arg\,max}% argumentum maximi
\DeclareMathOperator*{\esssup}   {ess\,sup}% essential supremum
\DeclareMathOperator*{\essinf}   {ess\,inf}% essential infimum
% endregion optimization ---------------------------------------------------------------


% region probability -------------------------------------------------------------------
\DeclareMathOperator{\E}     {\@mathoperators@expectation}      % expectation value
\DeclareMathOperator{\cov}   {cov}                              % covariance
\DeclareMathOperator{\corr}  {corr}                             % correlation
\DeclareMathOperator{\Var}   {\@mathoperators@variance}         % Variance
\DeclareMathOperator{\Bias}  {Bias}                             % Bias
\DeclareMathOperator{\median}{median}                           % Median
\DeclareMathOperator{\avg}   {avg}                              % Average
\DeclareMathOperator{\mean}  {mean}                             % Mean
\DeclareMathOperator{\std}   {std}                              % Standard deviation
\DeclareMathOperator{\Mode}  {mode}                             % Mode
% distributions
\DeclareMathOperator{\Ber}   {Ber}           % Bernoulli distribution
\DeclareMathOperator{\Cat}   {Cat}           % Categorical distribution
\DeclareMathOperator{\Dir}   {Dir}           % Dirichlet distribution
\DeclareMathOperator{\Exp}   {Exp}           % Exponential distribution
\DeclareMathOperator{\Gam}   {\Gamma}        % Gamma distribution
\DeclareMathOperator{\Lap}   {Lap}           % Laplace distribution
\DeclareMathOperator{\Mul}   {Mul}           % Multinomial distribution
\DeclareMathOperator{\Poi}   {Poi}           % Poisson distribution
\DeclareMathOperator{\Unif}  {\mathbf{Unif}} % Uniform distribution
% endregion probability ----------------------------------------------------------------


% region special functions -------------------------------------------------------------
\DeclareMathOperator{\one}    {\mathds{1}} % indicator function
\DeclareMathOperator{\id}     {id}         % identity function
\DeclareMathOperator{\sign}   {sign}       % signum
\DeclareMathOperator{\rect}   {rect}       % rect function (also known as boxcar)
\DeclareMathOperator{\erf}    {erf}        % error function
\DeclareMathOperator{\erfc}   {erfc}       % complementary error function
\DeclareMathOperator{\sinc}   {sinc}       % sinus cardinalis function
\DeclareMathOperator{\arsinh} {arsinh}     % inverse hyperbolic trigonometric functions
\DeclareMathOperator{\arcosh} {arcosh}     % inverse hyperbolic trigonometric functions
\DeclareMathOperator{\artanh} {artanh}     % inverse hyperbolic trigonometric functions
\DeclareMathOperator{\atan2}  {atan2}      % two-argument inverse tangent
% endregion special functions ----------------------------------------------------------


% region Machine Learning --------------------------------------------------------------
% operators
\DeclareMathOperator{\clip} {clip} % clipping operator
\DeclareMathOperator{\prox} {prox} % proximal operator
\DeclareMathOperator{\soft} {soft} % soft thresholding operator
\DeclareMathOperator{\hard} {hard} % hard thresholding operator
% activation functions
\DeclareMathOperator{\relu}     {\textsc{R}e\textsc{lu}}
\DeclareMathOperator{\leakyrelu}{\textsc{L}eaky\textsc{R}e\textsc{lu}}
\DeclareMathOperator{\elu}      {\textsc{E}xponential\textsc{L}inear\textsc{U}nit}
\DeclareMathOperator{\selu}     {\textsc{S}caled\textsc{E}xponential\textsc{L}inear\textsc{U}nit}
\DeclareMathOperator{\softsign} {softsign}
\DeclareMathOperator{\harshrink}{hardshrink}
\DeclareMathOperator{\sigmoid}  {sigmoid}
\DeclareMathOperator{\softmax}  {softmax}
\DeclareMathOperator{\softplus} {softplus}
\DeclareMathOperator{\logit}    {logit}
\DeclareMathOperator{\probit}   {probit}
% model types
\DeclareMathOperator{\CNN}{CNN}  % Convolutional neural network
\DeclareMathOperator{\FFN}{FFN}  % Feed forward network
\DeclareMathOperator{\GAT}{GAT}  % Graph attention network
\DeclareMathOperator{\GCN}{GCN}  % Graph convolutional network
\DeclareMathOperator{\GNN}{GNN}  % Graph neural network
\DeclareMathOperator{\MLP}{MLP}  % Multilayer perceptron
% RNNs
\DeclareMathOperator{\GRU}      {GRU}       % Gated recurrent unit
\DeclareMathOperator{\LSTM}     {LSTM}      % Long short-term memory
\DeclareMathOperator{\RNN}      {RNN}       % Recurrent neural network
\DeclareMathOperator{\GRUCell}  {GRUCell}   % Gated recurrent unit cell
\DeclareMathOperator{\LSTMCell} {LSTMCell}  % Long short-term memory cell
\DeclareMathOperator{\RNNCell}  {RNNCell}   % Recurrent neural network cell
% loss functions
\DeclareMathOperator*{\AUC}  {AUC}   % Area under curve
\DeclareMathOperator*{\CRPS} {CRPS}  % Continuous ranked probability score
\DeclareMathOperator*{\ELBO} {ELBO}  % Evidence lower bound
\DeclareMathOperator*{\KL}   {D_\textsc{kl}}% Kullback-Leibler divergence
\DeclareMathOperator*{\NJNLL}{NJNLL} % Normalized joint negative log-likelihood
\DeclareMathOperator*{\NLL}  {NLL}   % Negative log-likelihood
\DeclareMathOperator*{\QL}   {QL}    % Quantile loss
\DeclareMathOperator*{\MAE}  {MAE}   % Mean absolute error
\DeclareMathOperator*{\MSE}  {MSE}   % Mean squared error
\DeclareMathOperator*{\RMAE} {RMAE}  % Relative mean absolute error
\DeclareMathOperator*{\RMSE} {RMSE}  % Root mean squared error
\DeclareMathOperator*{\RSS}  {RSS}   % Residual sum of squares
% endregion Machine Learning -----------------------------------------------------------
% endregion mathoperators --------------------------------------------------------------
